#!/bin/sh

# Usage:
#   tmux-rails
#   tmux-rails directory-with-project-in-it

if [ $# -eq 1 ]
then
    if [ -d $1 ]
    then
        cd $1
    else
        echo "directory $1 not found"
        exit 1
    fi
fi

PROJECT=`basename $PWD`

#FUN FACT:

# in the -t option available with most tmux commands, the '.' character has special meaning, indicating a
# pane withing a window.  So if you've got a project in a directory named "foo-v4.8", and you use that as
# your session name as well, and then you do 'tmux some-command -t foo-v4.8', then tmux will try
# to target pane 8 of window 0 in session "foo-v4".  Which is not what you want at all, as that session
# doesn't even exist, let alone the pane.
#
# To get around this, one can use the fact that tmux will try to match your session name using fnmatch(3),
# (aka filename pattern matching or globbing).  So you can replace every '.' in your session name with '?',
# and give that to the -t option instead of your actual session name (perversely, tmux will happily create
# session names containing '.' for you, then gives you no way to reference them directly).

PMATCH=`echo "$PROJECT" | tr \. \?`

# tmux barfs on session names with '.' in them.  Inconvenient if your project name has a version number in it.
#PROJECT=`echo -n "$PROJECT" | tr \. _`

tmux start-server

if tmux has-session -t $PROJECT 2>/dev/null
then
    tmux attach -t $PROJECT
else
    # bundle
    find log -size +20M -delete
    rm tmp/miniprofiler/*
    rm tmp/capybara/*

    # the trailing colon after $PMATCH is the character that separates the
    # session name from the window name.  Leaving the window name empty
    # means, for new-window, "use the next available window number".  for
    # send-keys, it means "use the current window."  If the colon is missing
    # for send-keys, it will first try to interpret the session name as a
    # window identifier.  Which we don't want.

    tmux new-session -s "$PROJECT" -d -n "$PMATCH"
    tmux send-keys -t "$PMATCH:" "teamocil --here --layout huddle-react.yml" C-m
    tmux attach-session -t "$PMATCH"
fi
